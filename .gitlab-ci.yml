alpine:
    image: alpine:latest
    stage: build
    script:
    - apk update
    - apk --no-cache add bash git shellcheck
    - shellcheck -V
    - git ls-files --exclude='*.bash' --ignored | xargs shellcheck  || echo "No script found!"


Test:
    image: alpine:latest
    stage: test
    script:
        - apk update
        - apk --no-cache add bash libstdc++ readline git g++ make perl-dev readline-dev wget tree linux-headers libexecinfo-dev
        - wget -c https://epics-controls.org/download/base/base-7.0.5.tar.gz
        - tar -xzf base-7.0.5.tar.gz
        - EPICS_BASE=${CI_PROJECT_DIR}/base-7.0.5
        - EPICS_HOST_ARCH=$(sh $EPICS_BASE/startup/EpicsHostArch)
        - PATH=${EPICS_BASE}/bin/${EPICS_HOST_ARCH}:${PATH}
        - LD_LIBRARY_PATH=${EPICS_BASE}/lib/${EPICS_HOST_ARCH}:${LD_LIBRARY_PATH}
        - export EPICS_BASE
        - export EPICS_HOST_ARCH
        - export PATH
        - export LD_LIBRARY_PATH
        - export USERNAME="gitlab"
        - make -j -s -C ${EPICS_BASE} CFLAGS="-D__UCLIBC_MAJOR__=0 -fPIC" CXXFLAGS="-D__UCLIBC_MAJOR__=0 -fPIC"
        - echo ${EPICS_BASE}
        - echo ${EPICS_HOST_ARCH}
        - echo ${PATH}
        - echo ${LD_LIBRARY_PATH}
        - bash ${CI_PROJECT_DIR}/test.bash


#CentOS:
#    image: centos:7.9.2009
#    stage: test
#    before_script:
#    - yum -y install git bash sudo
#    - yum -y update
#    - git clone https://github.com/jeonghanlee/pkg_automation
#    - bash ${CI_PROJECT_DIR}/pkg_automation/pkg_automation.bash -y
#    - yum -y install ShellCheck
#    script:
#    - git ls-files --exclude='*.bash' --ignored | xargs shellcheck  || echo "No script found!" 

#Debian:
#    image: debian:buster-slim
#    stage: test
#    before_script:
#    - apt update
#    - apt install -y bash git shellcheck
#    script:
#    - export SHELLCHECK_OPTS="-e SC1117"
#    - git ls-files --exclude='*.bash' --ignored | xargs shellcheck  || echo "No script found!"

